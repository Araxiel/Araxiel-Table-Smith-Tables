/overriderolls 1
# Sample showing how various functions work

%A%,0
%B%,0
%C%,0
%Value%,0
%StringVar%,Welcome to TableSmith!

%Temp%,0

# -----------------------------------------------------------------
:Start
1,<font face="Verdana" size="2">
_[DEMO_Math]{Line~center,100}
_[DEMO_String]{Line~center,100}
_[DEMO_Sorting]{Line~center,100}
_[DEMO_Cond]{Line~center,100}
_[DEMO_CapEach]{Line~center,100}
_[DEMO_Loop]{Line~center,100}
_[DEMO_MinMax]{Line~center,100}
_[DEMO_Split]{Line~center,100}
_[DEMO_Used]{Line~center,100}
_[DEMO_Plural]{Line~center,100}
_[DEMO_Lockout]{Line~center,100}
_[DEMO_Format]
_[DEMO_Logic]
_{Status~Demonstrating various functions...}
_</font>

# -----------------------------------------------------------------
:DEMO_Math

1,<b>SAMPLE - Math Functions</b>{CR~}
_|Value={Dice~1d10-5}|Absolute value of %Value% is {Abs~%Value%}{CR~}
_|Value={Dice~1d100}|Square root of %Value% is {Sqrt~%Value%}{CR~}
_|Value={Sqrt~{Dice~1d100}}||Value*{Dice~1d3-2}|%Value% truncated looks like {Trunc~%Value%}{CR~}
_|Value={Sqrt~{Dice~1d100}}||Value*{Dice~1d3-2}|%Value% rounded:{CR~}
_ 3 decimal places: {Round~3,%Value%}{CR~}
_ 2 decimal places: {Round~2,%Value%}{CR~}
_ 1 decimal places: {Round~1,%Value%}{CR~}
_ 0 decimal places: {Round~0,%Value%}{CR~}
_ Ordinal values: {Ordinal~1}, {Ordinal~2}, {Ordinal~3}, {Ordinal~4}{CR~}
_ Calculation: |A={Dice~1d10}||B={Dice~1d10}||C={Dice~1d10}|(%A%+%B%) X %C% equals {Calc~(%A%+%B%)*%C%}{CR~}
_ Ceiling of 5.4: {Ceil~5.4}{CR~}
_ Floor of 5.4: {Floor~5.4}

# -----------------------------------------------------------------
:DEMO_String
1,<b>SAMPLE - String Functions</b>{CR~}
_|Value= Test |Before trim: (%Value%) / After trim: ({Trim~%Value%}){CR~}{CR~}
_For the string "%StringVar%":{CR~}
_<ul>
_<li>Leftmost |Value={Dice~1d10}|%Value% characters: {Left~%Value%,%StringVar%}</li>
_<li>Rightmost |Value={Dice~1d10}|%Value% characters: {Right~%Value%,%StringVar%}</li>
_<li>Four middle characters starting at |Value={Dice~1d10}|%Value%: {Mid~4,%Value%,%StringVar%}</li>
_<li>Length: {Length~%StringVar%}</li>
_<li>Replacing 'm' with 'X': {Replace~m,X,%StringVar%}</li>
_<li>The string "gon" is Found at place {Find~1,gon,dragon} in the word "dragon"</li>
_</ul>
_TABLESMITH in all lowercase: {LCase~TABLESMITH}{CR~}
_tablesmith in all uppercase: {UCase~tablesmith}{CR~}
_The word "lemon" {If~{VowelStart~lemon}=0?doesn't start/starts} with a vowel. 
_The word "apple" {If~{VowelStart~apple}=0?doesn't start/starts} with a vowel.

# -----------------------------------------------------------------
:DEMO_Sorting
1,<b>SAMPLE - Sorting</b>{CR~}
_Ordering (ascending): "orc,troll,skeleton" becomes "{OrderAsc~",",orc,troll,skeleton}"{CR~}
_Ordering (descending): "5,4,11,3,9,1" becomes "{OrderDesc~",",5,4,11,3,9,1}"

# -----------------------------------------------------------------
:DEMO_Cond
1,<b>SAMPLE - If and Select Functions</b>{CR~}
_|Temp={Dice~1d10}|
_If the die roll of %Temp% is 1-5, "low" is displayed; "high" otherwise{CR~}
_{If~%Temp% < 6 ? Low / High}{CR~}
_{CR~}
_|Temp={Dice~1d3}|
_For the die roll of %Temp%: 1 = "low", 2 = "middle", 3 = "high"{CR~}
_{Select~%Temp%,1,low,2,middle,high}

# -----------------------------------------------------------------
:DEMO_CapEach
1,<b>SAMPLE - CapEach Function</b>{CR~}
_|Temp=realm of mythosa|
_Before: %Temp%{CR~}
_|Temp={CapEachWord~%Temp%}|
_After: %Temp%{CR~}

# -----------------------------------------------------------------
:DEMO_MinMax
1,[ClearVars]
_<b>SAMPLE - Min/Max Functions</b>{CR~}
_|A={Dice~1d20}||B={Dice~1d20}||C={Dice~1d20}|
_[DisplayVars]
_|Temp={Min~%A%,%B%,%C%}|
_Minimum: %Temp%{CR~}
_|Temp={Max~%A%,%B%,%C%}|
_Maximum: %Temp%

# -----------------------------------------------------------------
:DEMO_Split
1,[ClearVars]
_<b>SAMPLE - Split Function</b>{CR~}
_Before:{CR~}[DisplayVars]
_|Temp=Bard,Sorcerer,Rogue|
_Temp = %Temp%{CR~}{CR~}
_{Split~Temp,",",A,B,C}
_After:{CR~}[DisplayVars]{CR~}

# -----------------------------------------------------------------
:DEMO_Used
1,[ClearVars]
_<b>SAMPLE - Check If Used Function</b>{CR~}
_Call to non-repeating table: {Cap~[NonRepeater]}{CR~}
_Has '1' been used? |A=1||B={Used~NonRepeater,%A%}|{If~%B% = 1 ? Yes/[Check2]}{CR~}
_Has '2' been used? |A=2||B={Used~NonRepeater,%A%}|{If~%B% = 1 ? Yes/[Check2]}{CR~}
_Has '3' been used? |A=3||B={Used~NonRepeater,%A%}|{If~%B% = 1 ? Yes/[Check2]}{CR~}
_Has '4' been used? |A=4||B={Used~NonRepeater,%A%}|{If~%B% = 1 ? Yes/[Check2]}

;!NonRepeater
1,one
1,two
1,three

:Check2
1,{If~%B% = 0 ? No/Value not in table's range.}

# -----------------------------------------------------------------
:DEMO_Plural
1,<b>SAMPLE - Plural Function</b>{CR~}
_harpy becomes {Plural~harpy}{CR~}
_wolf becomes {Plural~wolf}{CR~}
_kiss becomes {Plural~kiss}{CR~}
_ax becomes {Plural~ax}{CR~}
_hero becomes {Plural~hero}{CR~}
_crunch becomes {Plural~crunch}{CR~}
_lash becomes {Plural~lash}{CR~}
_dagger becomes {Plural~dagger}{CR~}

# -----------------------------------------------------------------
:DEMO_Lockout
1,<b>SAMPLE - Lockout Function</b>{CR~}
_Note: You may see an error here; this is normal and demonstrates what happens if you've locked out all of a group's entries.{CR~}{CR~}
_[LockGroup]{CR~}[LockGroup]{CR~}[LockGroup]

:!LockGroup
1,Entry 1 - don't call 5-7 {Lockout~LockGroup,5-7} after this
2,Entry 2 - call any other than 2 after this
3,Entry 3 - don't call 6 {Lockout~LockGroup,6} after this
4,Entry 4 - don't call 2, 7-8 {Lockout~LockGroup,2,7-8} after this
5,Entry 5 - don't call 1-2, 3, 7, 9-10 {Lockout~LockGroup,1-2,3,7,9-10} after this
6-7,Entry 6-7 - call any other than 6 or 7 after this
8,Entry 8 - call any other than 8 after this
9,Entry 9 - don't call 1-6 {Lockout~LockGroup,1-6} after this
10,Entry 10 - call any other than 10 after this

# -----------------------------------------------------------------
:DEMO_Loop
1,<b>SAMPLE - Looping</b>{CR~}
_|A={Dice~1d10}|
_Display "orc " %A% times: {Loop~%A%,orc }


# -----------------------------------------------------------------
:DEMO_Format
1,<b>SAMPLE - Formatting Functions</b>{CR~}
_This is {Bold~bold text}.{CR~}
_This is {Italic~italic text}.{CR~}
_Here is a line: {Line~{Select~{Dice~1d3},1,left,2,center,right},50}
#{Line~left,50}{Line~center,100}{Line~right,50}

# -----------------------------------------------------------------
:DEMO_Logic
1,<b>SAMPLE - Logic Functions</b>{CR~}
_|A={Dice~1d2}||B={Dice~1d2}|
_A is %A%, B is %B%{CR~}
_AND: {If~{And~%A%=1,%B%=1}=1?Both A and B are 1/A and B are not both 1}{CR~}
_OR: {If~{Or~%A%=2,%B%=2}=1?Either A or B are 2/Neither A nor B are 2}{CR~}
_XOR: {If~{Xor~%A%=2,%B%=2}=1?A or B, but not both, are 2/A and B are either both 1 or both 2}

# -----------------------------------------------------------------
:ClearVars
1,|A=0||B=0||C=0|

:DisplayVars
1,A = %A%{CR~}B = %B%{CR~}C = %C%{CR~}






